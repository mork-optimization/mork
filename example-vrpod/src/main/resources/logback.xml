<?xml version="1.0" encoding="UTF-8"?>

<configuration>
    <!-- Each logger level can be independently configured here -->
    <!-- Set our own log level to INFO by default -->
    <logger name="es.urjc.etsii.grafo" level="INFO"/>

    <!-- Override info level for the executor package, to print in real time information about the experiment progress -->
    <logger name="es.urjc.etsii.grafo.executors" level="DEBUG"/>

    <!-- If any algorithm component does not behave as expected, you can set the log level to DEBUG to see what is going on -->
    <!-- TRACE log level is reserved for generating very detailed information, for example in an improver method it will
     dump each operation performed for all solutions. -->

    <!--    <logger name="es.urjc.etsii.grafo.improve" level="DEBUG"/>-->
    <!--    <logger name="es.urjc.etsii.grafo.algorithms" level="DEBUG"/>-->


    <!-- Reduce the noise generated by the following packages -->
    <logger name="org.apache.poi.util.XMLHelper" level="ERROR"/>
    <logger name="org.apache.catalina" level="WARN"/>
    <logger name="org.springframework" level="WARN"/>

    <!-- Console appender, to write logs to the console -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!-- The pattern deletes the current line using ANSI scape sequences, so the progress bar is not printed multiple times -->
            <pattern>\\u001b[2K\r%clr([%d{HH:mm:ss}]){faint} %clr(%-5level) %clr(%-26.26logger{25}){cyan} %clr(:){faint} %m%n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- We can filter the logs printed to the console, for example to print only INFO
            and above to the console but keep DEBUG or TRACE to the file. By default filters TRACE logs -->
            <level>INFO</level>
        </filter>
    </appender>

    <!-- Write all logs to a file, with a rolling policy to avoid filling the disk.
    Each time the file size reaches the limit, or the current day changes, it is compressed and a new file is created. -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>log.txt</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>log-%d{yyyy-MM-dd}.%i}.gz</fileNamePattern>
            <maxFileSize>${LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE:-10MB}</maxFileSize>
        </rollingPolicy>
        <encoder>
            <pattern>
                %clr([%d{HH:mm:ss}]){faint} %clr(%-5level) %clr(%-26.26logger{25}){cyan} %clr(:){faint} %m%n
            </pattern>
        </encoder>
    </appender>

    <root level="info">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE"/>
    </root>
    <include resource="org/springframework/boot/logging/logback/defaults.xml" />

</configuration>